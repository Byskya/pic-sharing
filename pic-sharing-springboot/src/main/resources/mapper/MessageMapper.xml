<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.picsharingspringboot.mapper.MessageMapper">
    <insert id="saveMessage">
        insert into manager_notification (content) values (#{content})
    </insert>
    <insert id="saveChatData">
        insert into chat_message (sender_id,receiver_id,message) values (#{senderId},#{receiverId},#{message})
    </insert>
    <update id="updateNotification">
        update manager_notification set content = #{content} where id = #{id}
    </update>
    <update id="setMessageIsRead">
        update chat_message set is_read = 1 where receiver_id = #{senderId} and sender_id = #{receiverId}
    </update>
    <delete id="deleteNotificationById">
        delete from manager_notification where id = #{id}
    </delete>
    <select id="getAllNotifications" resultType="com.example.picsharingspringboot.entity.ManagerMessage">
        select * from manager_notification
    </select>
    <select id="getChatMessages" resultType="com.example.picsharingspringboot.entity.ChatMessage">
        select * from chat_message where sender_id = #{senderId} and receiver_id = #{receiverId} OR sender_id = #{receiverId} and receiver_id = #{senderId}
        ORDER BY created_at ASC
    </select>
    <select id="getUserMessageList" resultType="com.example.picsharingspringboot.entity.ChatMessage">
        select * from chat_message where receiver_id = #{id}  or sender_id = #{id} ORDER BY created_at ASC
    </select>
    <select id="getUserNotReadMessageNumber"
            resultType="com.example.picsharingspringboot.entity.ChatMessage">
        select * from chat_message where receiver_id = #{id} and is_read != 1
    </select>
</mapper>